{
  "hash": "9a68a5da595a553c6215819343104f4a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Hands on Machine Learning Chapter 2\nauthor: Noah Olsen\ndate: '2024-05-29'\ncategories:\n  - HOML\n  - Machine Learning\n---\n\n## Intro\nHey there! I've been rereading Aurélien Géron's excellent book [Hands-On Machine Learning with Scikit-Learn, Keras & Tensorflow](https://www.oreilly.com/library/view/hands-on-machine-learning/9781491962282/).\n\n\n![](homl.jpeg){}\n\nIt's a fantastic book that a highly recommend taking a look at. I'm going to go back through the book talking a little about each chapter and going through the exercises at the end of each chapter.\n\nChapter 2 focused on an example end to end machine learning project/workflow. The dataset used was the California Housing dataset, a common regression dataset in ML. The task is to predict the value of an unseen house based on district level housing data in California. Here is a sample of the dataset.\n\n::: {#bdd0c14a .cell execution_count=1}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<table id=\"itables_df57c776_e9d5_4c28_b569_cbf314f9be27\" class=\"display nowrap\" data-quarto-disable-processing=\"true\" style=\"table-layout:auto;width:auto;margin:auto;caption-side:bottom\">\n<thead>\n    <tr style=\"text-align: right;\">\n      \n      <th>longitude</th>\n      <th>latitude</th>\n      <th>housing_median_age</th>\n      <th>total_rooms</th>\n      <th>total_bedrooms</th>\n      <th>population</th>\n      <th>households</th>\n      <th>median_income</th>\n      <th>median_house_value</th>\n      <th>ocean_proximity</th>\n    </tr>\n  </thead><tbody><tr>\n<td style=\"vertical-align:middle; text-align:left\">\n<div style=\"float:left; margin-right: 10px;\">\n<a href=https://mwouts.github.io/itables/><svg class=\"main-svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\nwidth=\"64\" viewBox=\"0 0 500 400\" style=\"font-family: 'Droid Sans', sans-serif;\">\n    <g style=\"fill:#d9d7fc\">\n        <path d=\"M100,400H500V357H100Z\" />\n        <path d=\"M100,300H400V257H100Z\" />\n        <path d=\"M0,200H400V157H0Z\" />\n        <path d=\"M100,100H500V57H100Z\" />\n        <path d=\"M100,350H500V307H100Z\" />\n        <path d=\"M100,250H400V207H100Z\" />\n        <path d=\"M0,150H400V107H0Z\" />\n        <path d=\"M100,50H500V7H100Z\" />\n    </g>\n    <g style=\"fill:#1a1366;stroke:#1a1366;\">\n   <rect x=\"100\" y=\"7\" width=\"400\" height=\"43\">\n    <animate\n      attributeName=\"width\"\n      values=\"0;400;0\"\n      dur=\"5s\"\n      repeatCount=\"indefinite\" />\n      <animate\n      attributeName=\"x\"\n      values=\"100;100;500\"\n      dur=\"5s\"\n      repeatCount=\"indefinite\" />\n  </rect>\n        <rect x=\"0\" y=\"107\" width=\"400\" height=\"43\">\n    <animate\n      attributeName=\"width\"\n      values=\"0;400;0\"\n      dur=\"3.5s\"\n      repeatCount=\"indefinite\" />\n    <animate\n      attributeName=\"x\"\n      values=\"0;0;400\"\n      dur=\"3.5s\"\n      repeatCount=\"indefinite\" />\n  </rect>\n        <rect x=\"100\" y=\"207\" width=\"300\" height=\"43\">\n    <animate\n      attributeName=\"width\"\n      values=\"0;300;0\"\n      dur=\"3s\"\n      repeatCount=\"indefinite\" />\n    <animate\n      attributeName=\"x\"\n      values=\"100;100;400\"\n      dur=\"3s\"\n      repeatCount=\"indefinite\" />\n  </rect>\n        <rect x=\"100\" y=\"307\" width=\"400\" height=\"43\">\n    <animate\n      attributeName=\"width\"\n      values=\"0;400;0\"\n      dur=\"4s\"\n      repeatCount=\"indefinite\" />\n      <animate\n      attributeName=\"x\"\n      values=\"100;100;500\"\n      dur=\"4s\"\n      repeatCount=\"indefinite\" />\n  </rect>\n        <g style=\"fill:transparent;stroke-width:8; stroke-linejoin:round\" rx=\"5\">\n            <g transform=\"translate(45 50) rotate(-45)\">\n                <circle r=\"33\" cx=\"0\" cy=\"0\" />\n                <rect x=\"-8\" y=\"32\" width=\"16\" height=\"30\" />\n            </g>\n\n            <g transform=\"translate(450 152)\">\n                <polyline points=\"-15,-20 -35,-20 -35,40 25,40 25,20\" />\n                <rect x=\"-15\" y=\"-40\" width=\"60\" height=\"60\" />\n            </g>\n\n            <g transform=\"translate(50 352)\">\n                <polygon points=\"-35,-5 0,-40 35,-5\" />\n                <polygon points=\"-35,10 0,45 35,10\" />\n            </g>\n\n            <g transform=\"translate(75 250)\">\n                <polyline points=\"-30,30 -60,0 -30,-30\" />\n                <polyline points=\"0,30 -30,0 0,-30\" />\n            </g>\n\n            <g transform=\"translate(425 250) rotate(180)\">\n                <polyline points=\"-30,30 -60,0 -30,-30\" />\n                <polyline points=\"0,30 -30,0 0,-30\" />\n            </g>\n        </g>\n    </g>\n</svg>\n</a>\n</div>\n<div>\nLoading ITables v2.1.0 from the internet...\n(need <a href=https://mwouts.github.io/itables/troubleshooting.html>help</a>?)</td>\n</div>\n</tr></tbody>\n\n</table>\n<link href=\"https://www.unpkg.com/dt_for_itables@2.0.7/dt_bundle.css\" rel=\"stylesheet\">\n<script type=\"module\">\n    import {DataTable, jQuery as $} from 'https://www.unpkg.com/dt_for_itables@2.0.7/dt_bundle.js';\n\n    document.querySelectorAll(\"#itables_df57c776_e9d5_4c28_b569_cbf314f9be27:not(.dataTable)\").forEach(table => {\n        // Define the table data\n        const data = [[-122.23, 37.88, 41.0, 880.0, 129.0, 322.0, 126.0, 8.3252, 452600.0, \"NEAR BAY\"], [-122.22, 37.86, 21.0, 7099.0, 1106.0, 2401.0, 1138.0, 8.3014, 358500.0, \"NEAR BAY\"], [-122.24, 37.85, 52.0, 1467.0, 190.0, 496.0, 177.0, 7.2574, 352100.0, \"NEAR BAY\"], [-122.25, 37.85, 52.0, 1274.0, 235.0, 558.0, 219.0, 5.6431, 341300.0, \"NEAR BAY\"], [-122.25, 37.85, 52.0, 1627.0, 280.0, 565.0, 259.0, 3.8462, 342200.0, \"NEAR BAY\"], [-122.25, 37.85, 52.0, 919.0, 213.0, 413.0, 193.0, 4.0368, 269700.0, \"NEAR BAY\"], [-122.25, 37.84, 52.0, 2535.0, 489.0, 1094.0, 514.0, 3.6591, 299200.0, \"NEAR BAY\"], [-122.25, 37.84, 52.0, 3104.0, 687.0, 1157.0, 647.0, 3.12, 241400.0, \"NEAR BAY\"], [-122.26, 37.84, 42.0, 2555.0, 665.0, 1206.0, 595.0, 2.0804, 226700.0, \"NEAR BAY\"], [-122.25, 37.84, 52.0, 3549.0, 707.0, 1551.0, 714.0, 3.6912, 261100.0, \"NEAR BAY\"], [-122.26, 37.85, 52.0, 2202.0, 434.0, 910.0, 402.0, 3.2031, 281500.0, \"NEAR BAY\"], [-122.26, 37.85, 52.0, 3503.0, 752.0, 1504.0, 734.0, 3.2705, 241800.0, \"NEAR BAY\"], [-122.26, 37.85, 52.0, 2491.0, 474.0, 1098.0, 468.0, 3.075, 213500.0, \"NEAR BAY\"], [-122.26, 37.84, 52.0, 696.0, 191.0, 345.0, 174.0, 2.6736, 191300.0, \"NEAR BAY\"], [-122.26, 37.85, 52.0, 2643.0, 626.0, 1212.0, 620.0, 1.9167, 159200.0, \"NEAR BAY\"], [-122.26, 37.85, 50.0, 1120.0, 283.0, 697.0, 264.0, 2.125, 140000.0, \"NEAR BAY\"], [-122.27, 37.85, 52.0, 1966.0, 347.0, 793.0, 331.0, 2.775, 152500.0, \"NEAR BAY\"], [-122.27, 37.85, 52.0, 1228.0, 293.0, 648.0, 303.0, 2.1202, 155500.0, \"NEAR BAY\"], [-122.26, 37.84, 50.0, 2239.0, 455.0, 990.0, 419.0, 1.9911, 158700.0, \"NEAR BAY\"], [-122.27, 37.84, 52.0, 1503.0, 298.0, 690.0, 275.0, 2.6033, 162900.0, \"NEAR BAY\"], [-122.27, 37.85, 40.0, 751.0, 184.0, 409.0, 166.0, 1.3578, 147500.0, \"NEAR BAY\"], [-122.27, 37.85, 42.0, 1639.0, 367.0, 929.0, 366.0, 1.7135, 159800.0, \"NEAR BAY\"], [-122.27, 37.84, 52.0, 2436.0, 541.0, 1015.0, 478.0, 1.725, 113900.0, \"NEAR BAY\"], [-122.27, 37.84, 52.0, 1688.0, 337.0, 853.0, 325.0, 2.1806, 99700.0, \"NEAR BAY\"], [-122.27, 37.84, 52.0, 2224.0, 437.0, 1006.0, 422.0, 2.6, 132600.0, \"NEAR BAY\"], [-122.28, 37.85, 41.0, 535.0, 123.0, 317.0, 119.0, 2.4038, 107500.0, \"NEAR BAY\"], [-122.28, 37.85, 49.0, 1130.0, 244.0, 607.0, 239.0, 2.4597, 93800.0, \"NEAR BAY\"], [-122.28, 37.85, 52.0, 1898.0, 421.0, 1102.0, 397.0, 1.808, 105500.0, \"NEAR BAY\"], [-122.28, 37.84, 50.0, 2082.0, 492.0, 1131.0, 473.0, 1.6424, 108900.0, \"NEAR BAY\"], [-122.28, 37.84, 52.0, 729.0, 160.0, 395.0, 155.0, 1.6875, 132000.0, \"NEAR BAY\"], [-122.28, 37.84, 49.0, 1916.0, 447.0, 863.0, 378.0, 1.9274, 122300.0, \"NEAR BAY\"], [-122.28, 37.84, 52.0, 2153.0, 481.0, 1168.0, 441.0, 1.9615, 115200.0, \"NEAR BAY\"], [-122.27, 37.84, 48.0, 1922.0, 409.0, 1026.0, 335.0, 1.7969, 110400.0, \"NEAR BAY\"], [-122.27, 37.83, 49.0, 1655.0, 366.0, 754.0, 329.0, 1.375, 104900.0, \"NEAR BAY\"], [-122.27, 37.83, 51.0, 2665.0, 574.0, 1258.0, 536.0, 2.7303, 109700.0, \"NEAR BAY\"], [-122.27, 37.83, 49.0, 1215.0, 282.0, 570.0, 264.0, 1.4861, 97200.0, \"NEAR BAY\"], [-122.27, 37.83, 48.0, 1798.0, 432.0, 987.0, 374.0, 1.0972, 104500.0, \"NEAR BAY\"], [-122.28, 37.83, 52.0, 1511.0, 390.0, 901.0, 403.0, 1.4103, 103900.0, \"NEAR BAY\"], [-122.26, 37.83, 52.0, 1470.0, 330.0, 689.0, 309.0, 3.48, 191400.0, \"NEAR BAY\"], [-122.26, 37.83, 52.0, 2432.0, 715.0, 1377.0, 696.0, 2.5898, 176000.0, \"NEAR BAY\"], [-122.26, 37.83, 52.0, 1665.0, 419.0, 946.0, 395.0, 2.0978, 155400.0, \"NEAR BAY\"], [-122.26, 37.83, 51.0, 936.0, 311.0, 517.0, 249.0, 1.2852, 150000.0, \"NEAR BAY\"], [-122.26, 37.84, 49.0, 713.0, 202.0, 462.0, 189.0, 1.025, 118800.0, \"NEAR BAY\"], [-122.26, 37.84, 52.0, 950.0, 202.0, 467.0, 198.0, 3.9643, 188800.0, \"NEAR BAY\"], [-122.26, 37.83, 52.0, 1443.0, 311.0, 660.0, 292.0, 3.0125, 184400.0, \"NEAR BAY\"], [-122.26, 37.83, 52.0, 1656.0, 420.0, 718.0, 382.0, 2.6768, 182300.0, \"NEAR BAY\"], [-122.26, 37.83, 50.0, 1125.0, 322.0, 616.0, 304.0, 2.026, 142500.0, \"NEAR BAY\"], [-122.27, 37.82, 43.0, 1007.0, 312.0, 558.0, 253.0, 1.7348, 137500.0, \"NEAR BAY\"], [-122.26, 37.82, 40.0, 624.0, 195.0, 423.0, 160.0, 0.9506, 187500.0, \"NEAR BAY\"], [-122.27, 37.82, 40.0, 946.0, 375.0, 700.0, 352.0, 1.775, 112500.0, \"NEAR BAY\"], [-122.27, 37.82, 21.0, 896.0, 453.0, 735.0, 438.0, 0.9218, 171900.0, \"NEAR BAY\"], [-122.27, 37.82, 43.0, 1868.0, 456.0, 1061.0, 407.0, 1.5045, 93800.0, \"NEAR BAY\"], [-122.27, 37.82, 41.0, 3221.0, 853.0, 1959.0, 720.0, 1.1108, 97500.0, \"NEAR BAY\"], [-122.27, 37.82, 52.0, 1630.0, 456.0, 1162.0, 400.0, 1.2475, 104200.0, \"NEAR BAY\"], [-122.28, 37.82, 52.0, 1170.0, 235.0, 701.0, 233.0, 1.6098, 87500.0, \"NEAR BAY\"], [-122.28, 37.82, 52.0, 945.0, 243.0, 576.0, 220.0, 1.4113, 83100.0, \"NEAR BAY\"], [-122.28, 37.82, 52.0, 1238.0, 288.0, 622.0, 259.0, 1.5057, 87500.0, \"NEAR BAY\"], [-122.28, 37.82, 52.0, 1489.0, 335.0, 728.0, 244.0, 0.8172, 85300.0, \"NEAR BAY\"], [-122.28, 37.82, 52.0, 1387.0, 341.0, 1074.0, 304.0, 1.2171, 80300.0, \"NEAR BAY\"], [-122.29, 37.82, 2.0, 158.0, 43.0, 94.0, 57.0, 2.5625, 60000.0, \"NEAR BAY\"], [-122.29, 37.83, 52.0, 1121.0, 211.0, 554.0, 187.0, 3.3929, 75700.0, \"NEAR BAY\"], [-122.29, 37.82, 49.0, 135.0, 29.0, 86.0, 23.0, 6.1183, 75000.0, \"NEAR BAY\"], [-122.29, 37.81, 50.0, 760.0, 190.0, 377.0, 122.0, 0.9011, 86100.0, \"NEAR BAY\"], [-122.3, 37.81, 52.0, 1224.0, 237.0, 521.0, 159.0, 1.191, 76100.0, \"NEAR BAY\"], [-122.3, 37.81, 48.0, 828.0, 182.0, 392.0, 133.0, 2.5938, 73500.0, \"NEAR BAY\"], [-122.3, 37.81, 52.0, 1010.0, 209.0, 604.0, 187.0, 1.1667, 78400.0, \"NEAR BAY\"], [-122.3, 37.81, 48.0, 1455.0, 354.0, 788.0, 332.0, 0.8056, 84400.0, \"NEAR BAY\"], [-122.29, 37.8, 52.0, 1027.0, 244.0, 492.0, 147.0, 2.6094, 81300.0, \"NEAR BAY\"], [-122.3, 37.81, 52.0, 572.0, 109.0, 274.0, 82.0, 1.8516, 85000.0, \"NEAR BAY\"], [-122.29, 37.81, 46.0, 2801.0, 644.0, 1823.0, 611.0, 0.9802, 129200.0, \"NEAR BAY\"], [-122.29, 37.81, 26.0, 768.0, 152.0, 392.0, 127.0, 1.7719, 82500.0, \"NEAR BAY\"], [-122.29, 37.81, 46.0, 935.0, 297.0, 582.0, 277.0, 0.7286, 95200.0, \"NEAR BAY\"], [-122.29, 37.81, 49.0, 844.0, 204.0, 560.0, 152.0, 1.75, 75000.0, \"NEAR BAY\"], [-122.29, 37.81, 46.0, 12.0, 4.0, 18.0, 7.0, 0.4999, 67500.0, \"NEAR BAY\"], [-122.29, 37.81, 20.0, 835.0, 161.0, 290.0, 133.0, 2.483, 137500.0, \"NEAR BAY\"], [-122.28, 37.81, 17.0, 1237.0, 462.0, 762.0, 439.0, 0.9241, 177500.0, \"NEAR BAY\"], [-122.28, 37.81, 36.0, 2914.0, 562.0, 1236.0, 509.0, 2.4464, 102100.0, \"NEAR BAY\"], [-122.28, 37.81, 19.0, 1207.0, 243.0, 721.0, 207.0, 1.1111, 108300.0, \"NEAR BAY\"], [-122.29, 37.81, 23.0, 1745.0, 374.0, 1054.0, 325.0, 0.8026, 112500.0, \"NEAR BAY\"], [-122.28, 37.8, 38.0, 684.0, 176.0, 344.0, 155.0, 2.0114, 131300.0, \"NEAR BAY\"], [-122.28, 37.81, 17.0, 924.0, 289.0, 609.0, 289.0, 1.5, 162500.0, \"NEAR BAY\"], [-122.27, 37.81, 52.0, 210.0, 56.0, 183.0, 56.0, 1.1667, 112500.0, \"NEAR BAY\"], [-122.28, 37.81, 52.0, 340.0, 97.0, 200.0, 87.0, 1.5208, 112500.0, \"NEAR BAY\"], [-122.28, 37.81, 52.0, 386.0, 164.0, 346.0, 155.0, 0.8075, 137500.0, \"NEAR BAY\"], [-122.28, 37.81, 35.0, 948.0, 184.0, 467.0, 169.0, 1.8088, 118800.0, \"NEAR BAY\"], [-122.28, 37.81, 52.0, 773.0, 143.0, 377.0, 115.0, 2.4083, 98200.0, \"NEAR BAY\"], [-122.27, 37.81, 40.0, 880.0, 451.0, 582.0, 380.0, 0.977, 118800.0, \"NEAR BAY\"], [-122.27, 37.81, 10.0, 875.0, 348.0, 546.0, 330.0, 0.76, 162500.0, \"NEAR BAY\"], [-122.27, 37.8, 10.0, 105.0, 42.0, 125.0, 39.0, 0.9722, 137500.0, \"NEAR BAY\"], [-122.27, 37.8, 52.0, 249.0, 78.0, 396.0, 85.0, 1.2434, 500001.0, \"NEAR BAY\"], [-122.27, 37.8, 16.0, 994.0, 392.0, 800.0, 362.0, 2.0938, 162500.0, \"NEAR BAY\"], [-122.28, 37.8, 52.0, 215.0, 87.0, 904.0, 88.0, 0.8668, 137500.0, \"NEAR BAY\"], [-122.28, 37.8, 52.0, 96.0, 31.0, 191.0, 34.0, 0.75, 162500.0, \"NEAR BAY\"], [-122.27, 37.79, 27.0, 1055.0, 347.0, 718.0, 302.0, 2.6354, 187500.0, \"NEAR BAY\"], [-122.27, 37.8, 39.0, 1715.0, 623.0, 1327.0, 467.0, 1.8477, 179200.0, \"NEAR BAY\"], [-122.26, 37.8, 36.0, 5329.0, 2477.0, 3469.0, 2323.0, 2.0096, 130000.0, \"NEAR BAY\"], [-122.26, 37.82, 31.0, 4596.0, 1331.0, 2048.0, 1180.0, 2.8345, 183800.0, \"NEAR BAY\"], [-122.26, 37.81, 29.0, 335.0, 107.0, 202.0, 91.0, 2.0062, 125000.0, \"NEAR BAY\"], [-122.26, 37.82, 22.0, 3682.0, 1270.0, 2024.0, 1250.0, 1.2185, 170000.0, \"NEAR BAY\"], [-122.26, 37.82, 37.0, 3633.0, 1085.0, 1838.0, 980.0, 2.6104, 193100.0, \"NEAR BAY\"], [-117.04, 32.8, 11.0, 1802.0, 440.0, 630.0, 428.0, 2.0337, 146700.0, \"<1H OCEAN\"], [-121.29, 38.89, 10.0, 653.0, 120.0, 407.0, 146.0, 3.3889, 110800.0, \"INLAND\"], [-118.15, 33.77, 39.0, 2428.0, 634.0, 1312.0, 612.0, 2.7212, 266300.0, \"NEAR OCEAN\"], [-118.47, 33.99, 24.0, 1438.0, 454.0, 665.0, 416.0, 2.975, 500001.0, \"<1H OCEAN\"], [-121.77, 37.33, 9.0, 3160.0, 468.0, 1675.0, 470.0, 7.5443, 348400.0, \"<1H OCEAN\"], [-118.5, 33.97, 29.0, 2737.0, 808.0, 1157.0, 696.0, 5.128, 500001.0, \"<1H OCEAN\"], [-122.96, 38.26, 20.0, 1982.0, 358.0, 308.0, 132.0, 3.1429, 240900.0, \"NEAR OCEAN\"], [-118.39, 34.08, 27.0, 6605.0, 1710.0, 2665.0, 1520.0, 3.8088, 500001.0, \"<1H OCEAN\"], [-117.91, 34.07, 36.0, 1390.0, 270.0, 887.0, 266.0, 5.0897, 189000.0, \"<1H OCEAN\"], [-117.85, 33.85, 17.0, 4678.0, 1065.0, 2427.0, 1020.0, 4.2276, 254100.0, \"<1H OCEAN\"], [-119.92, 38.91, 15.0, 3831.0, 625.0, 984.0, 328.0, 5.0718, 162500.0, \"INLAND\"], [-122.49, 37.67, 29.0, 3795.0, 675.0, 2494.0, 696.0, 5.2848, 260300.0, \"NEAR OCEAN\"], [-117.71, 33.65, 16.0, 3774.0, 456.0, 1587.0, 430.0, 8.6088, 307400.0, \"<1H OCEAN\"], [-118.36, 33.91, 36.0, 2064.0, 474.0, 1366.0, 421.0, 4.1, 243100.0, \"<1H OCEAN\"], [-117.27, 33.04, 27.0, 1839.0, 392.0, 1302.0, 404.0, 3.55, 214600.0, \"NEAR OCEAN\"], [-121.96, 37.3, 23.0, 4040.0, 843.0, 2181.0, 843.0, 4.0403, 303400.0, \"<1H OCEAN\"], [-122.16, 37.74, 46.0, 1029.0, 181.0, 567.0, 211.0, 3.4844, 129500.0, \"NEAR BAY\"], [-117.47, 34.12, 6.0, 10565.0, 1767.0, 5690.0, 1555.0, 4.1797, 141000.0, \"INLAND\"], [-117.72, 34.0, 15.0, 4363.0, 690.0, 2410.0, 666.0, 5.4824, 179700.0, \"INLAND\"], [-118.31, 33.75, 34.0, 2338.0, 393.0, 1031.0, 373.0, 6.287, 396400.0, \"NEAR OCEAN\"], [-118.19, 33.9, 32.0, 2762.0, 652.0, 2677.0, 632.0, 2.5719, 105600.0, \"<1H OCEAN\"], [-117.05, 32.57, 13.0, 2880.0, 576.0, 2450.0, 567.0, 3.1696, 138000.0, \"NEAR OCEAN\"], [-122.17, 37.71, 38.0, 890.0, 200.0, 481.0, 198.0, 3.244, 179800.0, \"NEAR BAY\"], [-122.28, 37.49, 29.0, 4148.0, 635.0, 1638.0, 627.0, 6.912, 457200.0, \"NEAR OCEAN\"], [-117.91, 33.75, 8.0, 2346.0, 679.0, 3842.0, 674.0, 3.0635, 160000.0, \"<1H OCEAN\"], [-119.25, 34.26, 30.0, 2948.0, 827.0, 1635.0, 750.0, 2.67, 214900.0, \"NEAR OCEAN\"], [-118.12, 33.86, 34.0, 2116.0, 427.0, 972.0, 396.0, 4.8516, 213600.0, \"<1H OCEAN\"], [-120.04, 36.96, 23.0, 2126.0, 506.0, 2091.0, 491.0, 1.3713, 51800.0, \"INLAND\"], [-118.38, 33.86, 15.0, 1778.0, 311.0, 908.0, 330.0, 7.674, 329300.0, \"<1H OCEAN\"], [-122.35, 37.95, 45.0, 2142.0, 431.0, 1318.0, 431.0, 3.0737, 111600.0, \"NEAR BAY\"], [-118.23, 33.9, 45.0, 1285.0, 238.0, 840.0, 211.0, 3.4107, 112500.0, \"<1H OCEAN\"], [-117.57, 33.91, 22.0, 2620.0, 396.0, 1324.0, 362.0, 5.3735, 214600.0, \"INLAND\"], [-122.34, 37.55, 44.0, 2465.0, 328.0, 843.0, 324.0, 6.9533, 500001.0, \"NEAR OCEAN\"], [-118.46, 34.05, 21.0, 3639.0, 1002.0, 1489.0, 983.0, 4.6197, 387500.0, \"<1H OCEAN\"], [-122.19, 37.78, 52.0, 2198.0, 397.0, 984.0, 369.0, 3.22, 156500.0, \"NEAR BAY\"], [-117.99, 33.88, 15.0, 2298.0, 567.0, 1261.0, 527.0, 4.2422, 159400.0, \"<1H OCEAN\"], [-119.05, 36.06, 23.0, 2344.0, 407.0, 1184.0, 406.0, 3.1625, 70600.0, \"INLAND\"], [-119.19, 34.15, 31.0, 4175.0, 1004.0, 3310.0, 954.0, 3.1989, 185400.0, \"NEAR OCEAN\"], [-121.62, 36.67, 45.0, 1827.0, 408.0, 1507.0, 410.0, 2.8942, 129000.0, \"<1H OCEAN\"], [-116.77, 33.92, 19.0, 2307.0, 525.0, 1266.0, 437.0, 1.6875, 63000.0, \"INLAND\"], [-119.1, 35.79, 19.0, 1809.0, 477.0, 2051.0, 416.0, 1.8144, 49800.0, \"INLAND\"], [-119.06, 34.37, 32.0, 3885.0, 759.0, 2504.0, 736.0, 3.6453, 201700.0, \"<1H OCEAN\"], [-121.86, 39.75, 18.0, 1651.0, 309.0, 856.0, 293.0, 3.5046, 118300.0, \"INLAND\"], [-118.02, 34.13, 34.0, 1966.0, 319.0, 980.0, 297.0, 7.7307, 429000.0, \"INLAND\"], [-118.05, 34.06, 25.0, 1022.0, 291.0, 1570.0, 297.0, 3.023, 142000.0, \"<1H OCEAN\"], [-118.09, 33.98, 37.0, 1226.0, 255.0, 1068.0, 271.0, 3.1607, 172200.0, \"<1H OCEAN\"], [-122.51, 38.06, 24.0, 9493.0, 1935.0, 5162.0, 1880.0, 3.0742, 118800.0, \"NEAR BAY\"], [-117.94, 34.06, 32.0, 3418.0, 662.0, 2003.0, 622.0, 4.0333, 210200.0, \"<1H OCEAN\"], [-118.37, 34.02, 44.0, 1944.0, 458.0, 981.0, 377.0, 2.6154, 193200.0, \"<1H OCEAN\"], [-118.26, 33.85, 24.0, 9071.0, 1335.0, 4558.0, 1327.0, 5.542, 197500.0, \"<1H OCEAN\"], [-121.28, 38.68, 16.0, 3467.0, 615.0, 1478.0, 601.0, 3.75, 147300.0, \"INLAND\"], [-118.11, 33.91, 29.0, 889.0, 166.0, 597.0, 163.0, 4.9609, 186700.0, \"<1H OCEAN\"], [-117.2, 33.38, 14.0, 5392.0, 821.0, 2350.0, 810.0, 5.0507, 291500.0, \"<1H OCEAN\"], [-118.2, 34.11, 52.0, 1901.0, 525.0, 1856.0, 480.0, 3.0, 156400.0, \"<1H OCEAN\"], [-118.38, 34.05, 40.0, 2352.0, 598.0, 1133.0, 563.0, 3.238, 287500.0, \"<1H OCEAN\"], [-117.18, 32.84, 30.0, 2290.0, 523.0, 1272.0, 472.0, 3.5606, 165100.0, \"NEAR OCEAN\"], [-119.7, 34.4, 25.0, 1858.0, 493.0, 865.0, 460.0, 3.0938, 312500.0, \"NEAR OCEAN\"], [-118.51, 34.3, 24.0, 6145.0, 868.0, 2710.0, 875.0, 7.5078, 344000.0, \"<1H OCEAN\"], [-116.39, 33.69, 10.0, 11659.0, 2007.0, 2186.0, 1083.0, 6.9833, 238800.0, \"INLAND\"], [-117.28, 32.83, 34.0, 2392.0, 653.0, 933.0, 619.0, 3.7306, 500000.0, \"NEAR OCEAN\"], [-122.45, 40.85, 20.0, 2701.0, 573.0, 892.0, 358.0, 2.7736, 107800.0, \"INLAND\"], [-117.87, 33.72, 39.0, 3167.0, 669.0, 2789.0, 619.0, 3.5902, 165900.0, \"<1H OCEAN\"], [-119.32, 36.31, 21.0, 2309.0, 424.0, 1047.0, 453.0, 2.9886, 87500.0, \"INLAND\"], [-122.27, 37.54, 15.0, 2126.0, 310.0, 905.0, 306.0, 8.9083, 500001.0, \"NEAR BAY\"], [-122.71, 38.5, 15.0, 5645.0, 830.0, 2324.0, 769.0, 6.6104, 330900.0, \"<1H OCEAN\"], [-119.77, 36.77, 29.0, 2554.0, 705.0, 2669.0, 655.0, 1.2176, 61900.0, \"INLAND\"], [-121.44, 38.64, 18.0, 1756.0, 442.0, 837.0, 320.0, 1.125, 70500.0, \"INLAND\"], [-117.16, 32.8, 37.0, 422.0, 79.0, 211.0, 80.0, 3.0625, 159700.0, \"NEAR OCEAN\"], [-119.78, 36.65, 27.0, 1226.0, 240.0, 706.0, 211.0, 2.77, 68400.0, \"INLAND\"], [-122.16, 39.78, 32.0, 1288.0, 221.0, 562.0, 203.0, 2.325, 69600.0, \"INLAND\"], [-118.19, 33.86, 38.0, 2009.0, 524.0, 1449.0, 451.0, 2.7045, 155400.0, \"<1H OCEAN\"], [-117.09, 32.72, 33.0, 1096.0, 240.0, 716.0, 224.0, 1.6944, 111800.0, \"NEAR OCEAN\"], [-118.29, 33.92, 23.0, 2503.0, 532.0, 1735.0, 505.0, 2.7368, 162800.0, \"<1H OCEAN\"], [-122.29, 37.55, 27.0, 3789.0, 874.0, 2243.0, 866.0, 4.39, 270100.0, \"NEAR OCEAN\"], [-120.76, 37.61, 30.0, 816.0, 159.0, 531.0, 147.0, 3.2604, 87900.0, \"INLAND\"], [-118.58, 34.22, 35.0, 2560.0, 441.0, 1428.0, 468.0, 5.6345, 228200.0, \"<1H OCEAN\"], [-117.67, 33.47, 22.0, 2728.0, 616.0, 1081.0, 566.0, 1.6393, 500001.0, \"<1H OCEAN\"], [-119.16, 34.2, 35.0, 2183.0, 636.0, 3504.0, 623.0, 1.9704, 160300.0, \"NEAR OCEAN\"], [-117.29, 33.18, 15.0, 3780.0, 792.0, 1632.0, 721.0, 2.7644, 111400.0, \"NEAR OCEAN\"], [-119.57, 36.71, 10.0, 1657.0, 359.0, 958.0, 380.0, 2.6458, 84800.0, \"INLAND\"], [-118.15, 34.19, 48.0, 1854.0, 360.0, 1126.0, 382.0, 3.2216, 161600.0, \"<1H OCEAN\"], [-118.1, 34.01, 29.0, 2077.0, 564.0, 2087.0, 543.0, 2.66, 189200.0, \"<1H OCEAN\"], [-118.27, 34.04, 13.0, 1784.0, NaN, 2158.0, 682.0, 1.7038, 118100.0, \"<1H OCEAN\"], [-117.25, 33.08, 13.0, 3651.0, 465.0, 1311.0, 435.0, 7.5402, 340300.0, \"NEAR OCEAN\"], [-118.14, 34.06, 39.0, 2390.0, 444.0, 1246.0, 422.0, 3.7857, 245700.0, \"<1H OCEAN\"], [-118.21, 34.04, 47.0, 1325.0, 393.0, 1557.0, 352.0, 2.8, 148400.0, \"<1H OCEAN\"], [-120.66, 35.13, 41.0, 2666.0, 751.0, 940.0, 507.0, 1.9653, 236100.0, \"<1H OCEAN\"], [-117.92, 33.75, 8.0, 2325.0, 598.0, 1511.0, 565.0, 3.3629, 137500.0, \"<1H OCEAN\"], [-120.15, 39.36, 9.0, 2254.0, 400.0, 694.0, 243.0, 5.6856, 138100.0, \"INLAND\"], [-118.08, 33.89, 28.0, 1035.0, 275.0, 1545.0, 269.0, 3.0357, 123400.0, \"<1H OCEAN\"], [-122.07, 37.91, 28.0, 1731.0, 295.0, 810.0, 295.0, 5.0391, 259800.0, \"NEAR BAY\"], [-117.18, 34.05, 29.0, 3436.0, 731.0, 1323.0, 676.0, 2.4943, 122300.0, \"INLAND\"], [-117.93, 33.82, 28.0, 2444.0, 555.0, 1848.0, 567.0, 3.0179, 198800.0, \"<1H OCEAN\"], [-117.17, 32.79, 43.0, 1269.0, 297.0, 946.0, 285.0, 2.1447, 133300.0, \"NEAR OCEAN\"], [-119.55, 36.69, 21.0, 1551.0, 423.0, 1519.0, 406.0, 1.7132, 55900.0, \"INLAND\"], [-122.02, 37.94, 23.0, 3516.0, 661.0, 1465.0, 623.0, 4.2569, 213100.0, \"NEAR BAY\"], [-122.14, 37.44, 52.0, 3117.0, 468.0, 1114.0, 421.0, 6.6756, 500001.0, \"NEAR BAY\"], [-121.92, 37.24, 26.0, 6777.0, 1051.0, 3319.0, 1061.0, 6.3663, 279400.0, \"<1H OCEAN\"], [-121.82, 38.01, 42.0, 1017.0, 253.0, 798.0, 266.0, 2.1719, 99100.0, \"INLAND\"], [-116.94, 32.8, 28.0, 3042.0, 729.0, 1964.0, 703.0, 2.4141, 137500.0, \"<1H OCEAN\"], [-118.19, 33.86, 36.0, 2013.0, 546.0, 1659.0, 522.0, 3.1215, 153600.0, \"<1H OCEAN\"], [-121.31, 37.96, 52.0, 2654.0, 468.0, 1157.0, 494.0, 3.226, 107600.0, \"INLAND\"], [-117.98, 33.81, 28.0, 3528.0, 816.0, 2304.0, 764.0, 2.582, 181800.0, \"<1H OCEAN\"], [-117.97, 34.05, 36.0, 931.0, 160.0, 746.0, 201.0, 3.1667, 158000.0, \"<1H OCEAN\"], [-117.56, 33.94, 6.0, 575.0, 73.0, 318.0, 88.0, 7.0215, 257100.0, \"INLAND\"], [-121.88, 37.44, 14.0, 2073.0, 343.0, 1107.0, 330.0, 6.7093, 311200.0, \"<1H OCEAN\"], [-122.14, 37.41, 35.0, 2419.0, 426.0, 949.0, 433.0, 6.4588, 437100.0, \"NEAR BAY\"], [-122.28, 37.86, 52.0, 1659.0, 367.0, 788.0, 346.0, 2.8214, 164300.0, \"NEAR BAY\"], [-118.0, 33.91, 19.0, 5166.0, 770.0, 2374.0, 753.0, 5.979, 285200.0, \"<1H OCEAN\"], [-122.73, 38.26, 35.0, 3941.0, 645.0, 1668.0, 620.0, 4.385, 317700.0, \"<1H OCEAN\"], [-118.34, 34.02, 48.0, 1614.0, 320.0, 684.0, 318.0, 4.2218, 181000.0, \"<1H OCEAN\"], [-121.77, 36.92, 9.0, 4934.0, 1112.0, 3198.0, 977.0, 3.5, 194800.0, \"<1H OCEAN\"], [-122.04, 37.39, 5.0, 8745.0, 2211.0, 3959.0, 2019.0, 4.7685, 280100.0, \"<1H OCEAN\"], [-118.27, 34.09, 52.0, 2327.0, 555.0, 1048.0, 491.0, 3.7847, 252300.0, \"<1H OCEAN\"], [-118.46, 34.26, 33.0, 1358.0, 247.0, 738.0, 235.0, 5.0947, 210300.0, \"<1H OCEAN\"], [-122.2, 37.75, 36.0, 606.0, 132.0, 531.0, 133.0, 1.5809, 70000.0, \"NEAR BAY\"], [-122.54, 38.36, 40.0, 2725.0, 531.0, 1167.0, 458.0, 3.7969, 202800.0, \"<1H OCEAN\"], [-121.98, 38.37, 21.0, 3027.0, 675.0, 2018.0, 642.0, 2.8438, 111500.0, \"INLAND\"], [-122.22, 37.78, 44.0, 2968.0, 710.0, 2269.0, 610.0, 2.3906, 111700.0, \"NEAR BAY\"], [-122.26, 37.55, 17.0, 4576.0, 814.0, 1941.0, 807.0, 5.9572, 443800.0, \"NEAR BAY\"], [-117.76, 34.07, 51.0, 1538.0, 394.0, 1173.0, 388.0, 2.3156, 109800.0, \"INLAND\"], [-122.59, 38.44, 14.0, 1665.0, 390.0, 505.0, 348.0, 3.183, 201200.0, \"<1H OCEAN\"], [-117.76, 34.06, 30.0, 1700.0, 504.0, 1719.0, 459.0, 2.227, 91900.0, \"INLAND\"], [-117.92, 33.73, 17.0, 1692.0, 293.0, 934.0, 280.0, 4.4728, 205800.0, \"<1H OCEAN\"], [-117.83, 33.88, 18.0, 2112.0, 340.0, 1048.0, 315.0, 6.9308, 231700.0, \"<1H OCEAN\"], [-121.96, 38.33, 3.0, 7985.0, 1257.0, 3664.0, 1215.0, 4.976, 158300.0, \"INLAND\"], [-122.0, 38.35, 24.0, 745.0, 116.0, 300.0, 115.0, 3.6176, 158500.0, \"INLAND\"], [-121.37, 38.58, 37.0, 2839.0, 390.0, 1006.0, 400.0, 7.3343, 280400.0, \"INLAND\"], [-118.25, 34.01, 28.0, 481.0, 136.0, 596.0, 128.0, 1.2396, 90300.0, \"<1H OCEAN\"], [-116.98, 32.75, 25.0, 4137.0, 662.0, 1905.0, 630.0, 4.375, 214000.0, \"<1H OCEAN\"], [-122.44, 37.78, 52.0, 1118.0, 279.0, 514.0, 284.0, 2.4196, 346200.0, \"NEAR BAY\"], [-122.58, 38.58, 32.0, 2723.0, 637.0, 1549.0, 556.0, 2.3942, 183100.0, \"INLAND\"], [-122.3, 38.32, 20.0, 2063.0, 486.0, 1045.0, 460.0, 2.5035, 153200.0, \"NEAR BAY\"], [-121.39, 38.59, 33.0, 2091.0, 468.0, 1053.0, 470.0, 2.2264, 108100.0, \"INLAND\"], [-118.45, 34.04, 19.0, 3330.0, 1010.0, 1837.0, 915.0, 3.0173, 393800.0, \"<1H OCEAN\"], [-120.24, 37.21, 31.0, 2447.0, 465.0, 1313.0, 352.0, 3.3929, 93800.0, \"INLAND\"], [-116.91, 32.82, 14.0, 1978.0, 424.0, 1085.0, 387.0, 3.8073, 170100.0, \"<1H OCEAN\"], [-121.77, 37.68, 41.0, 1501.0, 299.0, 629.0, 288.0, 4.6806, 209400.0, \"INLAND\"], [-117.87, 33.78, 30.0, 2022.0, 522.0, 1196.0, 463.0, 3.7454, 186000.0, \"<1H OCEAN\"], [-118.13, 33.76, 52.0, 2216.0, 526.0, 940.0, 530.0, 4.5469, 381000.0, \"NEAR OCEAN\"], [-118.25, 33.93, 42.0, 819.0, 233.0, 899.0, 228.0, 1.1346, 85400.0, \"<1H OCEAN\"], [-117.05, 32.63, 31.0, 4911.0, 861.0, 2334.0, 843.0, 4.1958, 160100.0, \"NEAR OCEAN\"], [-119.29, 36.34, 28.0, 1440.0, 431.0, 2178.0, 440.0, 1.2634, 50600.0, \"INLAND\"], [-121.88, 37.33, 45.0, 1192.0, 371.0, 1084.0, 345.0, 2.8594, 205900.0, \"<1H OCEAN\"], [-118.28, 34.02, 52.0, 281.0, 103.0, 470.0, 96.0, 1.9375, 38800.0, \"<1H OCEAN\"], [-118.36, 34.05, 48.0, 1835.0, 380.0, 956.0, 370.0, 3.2813, 243600.0, \"<1H OCEAN\"], [-118.31, 34.08, 49.0, 2549.0, 630.0, 1539.0, 594.0, 2.6218, 350900.0, \"<1H OCEAN\"], [-118.01, 34.12, 32.0, 1937.0, 332.0, 922.0, 340.0, 3.94, 278400.0, \"INLAND\"], [-121.3, 38.74, 41.0, 4374.0, 1039.0, 2387.0, 959.0, 2.3611, 87900.0, \"INLAND\"], [-118.38, 34.18, 27.0, 4834.0, 1527.0, 3847.0, 1432.0, 2.1449, 165300.0, \"<1H OCEAN\"], [-117.1, 32.68, 42.0, 2013.0, 568.0, 1920.0, 557.0, 2.0724, 107600.0, \"NEAR OCEAN\"], [-118.37, 33.85, 29.0, 3662.0, 586.0, 1626.0, 611.0, 6.3974, 410000.0, \"<1H OCEAN\"], [-118.38, 34.06, 29.0, 3946.0, 1008.0, 1676.0, 876.0, 2.7824, 450000.0, \"<1H OCEAN\"], [-122.01, 37.94, 26.0, 1619.0, 224.0, 706.0, 220.0, 6.0704, 268000.0, \"NEAR BAY\"], [-121.39, 38.55, 18.0, 1734.0, 467.0, 783.0, 447.0, 1.9044, 154300.0, \"INLAND\"], [-118.23, 34.21, 29.0, 2584.0, 608.0, 1217.0, 568.0, 3.3287, 273400.0, \"<1H OCEAN\"], [-117.93, 33.85, 25.0, 1026.0, 288.0, 1646.0, 283.0, 4.2019, 163900.0, \"<1H OCEAN\"], [-119.85, 36.8, 14.0, 1876.0, 324.0, 1031.0, 311.0, 3.6563, 88800.0, \"INLAND\"], [-118.21, 34.04, 36.0, 1825.0, 479.0, 2097.0, 480.0, 2.1862, 135300.0, \"<1H OCEAN\"], [-118.43, 34.22, 34.0, 1588.0, 360.0, 1080.0, 340.0, 3.66, 184600.0, \"<1H OCEAN\"], [-117.63, 33.47, 4.0, 2320.0, 405.0, 1408.0, 477.0, 6.3369, 256000.0, \"NEAR OCEAN\"], [-118.0, 33.76, 12.0, 1250.0, 331.0, 1047.0, 334.0, 3.0625, 208800.0, \"<1H OCEAN\"], [-119.49, 34.39, 17.0, 4617.0, 982.0, 2303.0, 923.0, 3.9224, 230600.0, \"NEAR OCEAN\"], [-122.91, 39.03, 14.0, 2374.0, 557.0, 723.0, 427.0, 1.3532, 95800.0, \"INLAND\"], [-121.98, 37.36, 34.0, 1735.0, 318.0, 1019.0, 301.0, 4.5625, 242700.0, \"<1H OCEAN\"], [-117.88, 33.76, 37.0, 2988.0, 677.0, 2354.0, 666.0, 3.4345, 235500.0, \"<1H OCEAN\"], [-116.97, 32.8, 15.0, 3927.0, 1018.0, 2204.0, 977.0, 2.4367, 111400.0, \"<1H OCEAN\"], [-121.93, 36.63, 28.0, 3983.0, 852.0, 1582.0, 778.0, 3.5147, 313900.0, \"NEAR OCEAN\"], [-117.99, 34.13, 37.0, 1568.0, 371.0, 1618.0, 350.0, 2.9605, 129400.0, \"INLAND\"], [-117.06, 32.8, 17.0, 2247.0, 340.0, 973.0, 318.0, 5.5, 222000.0, \"<1H OCEAN\"], [-118.16, 34.03, 41.0, 1377.0, 293.0, 1142.0, 272.0, 3.1724, 141600.0, \"<1H OCEAN\"], [-117.33, 34.06, 42.0, 530.0, 123.0, 390.0, 124.0, 1.0469, 67000.0, \"INLAND\"], [-121.27, 38.11, 15.0, 2039.0, 384.0, 1178.0, 375.0, 3.8672, 120100.0, \"INLAND\"], [-118.24, 34.2, 41.0, 2067.0, 452.0, 1282.0, 455.0, 5.5756, 309900.0, \"<1H OCEAN\"], [-122.15, 37.74, 52.0, 2898.0, 557.0, 1338.0, 550.0, 3.851, 183500.0, \"NEAR BAY\"], [-122.07, 37.72, 26.0, 3204.0, 477.0, 1411.0, 484.0, 5.4834, 295200.0, \"NEAR BAY\"], [-118.19, 33.79, 43.0, 1823.0, 600.0, 2339.0, 560.0, 1.6792, 130600.0, \"NEAR OCEAN\"], [-120.98, 37.65, 40.0, 422.0, 63.0, 158.0, 63.0, 7.3841, 172200.0, \"INLAND\"], [-122.26, 38.15, 26.0, 3699.0, 671.0, 2388.0, 699.0, 4.0515, 121900.0, \"NEAR BAY\"], [-118.39, 34.08, 28.0, 833.0, 230.0, 349.0, 210.0, 3.067, 375000.0, \"<1H OCEAN\"], [-121.04, 39.08, 8.0, 2870.0, 526.0, 1307.0, 451.0, 3.463, 201700.0, \"INLAND\"], [-117.61, 34.34, 18.0, 5210.0, 912.0, 1301.0, 464.0, 4.8623, 176900.0, \"INLAND\"], [-120.44, 34.94, 24.0, 2481.0, 476.0, 1101.0, 474.0, 3.1576, 147200.0, \"<1H OCEAN\"], [-121.91, 37.23, 22.0, 2614.0, 453.0, 1240.0, 462.0, 6.0712, 271800.0, \"<1H OCEAN\"], [-121.84, 37.34, 27.0, 2512.0, 526.0, 3033.0, 526.0, 4.25, 162900.0, \"<1H OCEAN\"], [-118.34, 34.06, 52.0, 1311.0, 310.0, 707.0, 290.0, 3.4812, 432800.0, \"<1H OCEAN\"], [-120.8, 35.33, 20.0, 2200.0, 393.0, 996.0, 365.0, 3.587, 330000.0, \"NEAR OCEAN\"], [-118.13, 34.08, 40.0, 1931.0, 449.0, 1367.0, 446.0, 2.575, 228400.0, \"<1H OCEAN\"], [-119.33, 36.22, 9.0, 3748.0, 644.0, 1955.0, 620.0, 4.2011, 108100.0, \"INLAND\"], [-118.71, 34.29, 24.0, 2983.0, 406.0, 1203.0, 381.0, 6.3236, 302000.0, \"<1H OCEAN\"], [-117.36, 33.99, 42.0, 1178.0, 261.0, 804.0, 283.0, 2.9688, 92900.0, \"INLAND\"], [-118.24, 33.99, 44.0, 448.0, 116.0, 504.0, 96.0, 1.875, 98600.0, \"<1H OCEAN\"], [-117.9, 33.88, 28.0, 2696.0, 346.0, 947.0, 356.0, 9.0055, 375400.0, \"<1H OCEAN\"], [-117.76, 34.11, 22.0, 4935.0, 954.0, 2874.0, 938.0, 3.9825, 180500.0, \"INLAND\"], [-118.17, 33.74, 36.0, 2006.0, 453.0, 807.0, 426.0, 3.7838, 500001.0, \"NEAR OCEAN\"], [-122.32, 37.56, 26.0, 2339.0, 704.0, 1283.0, 654.0, 3.162, 415000.0, \"NEAR OCEAN\"], [-118.47, 34.01, 44.0, 2175.0, 475.0, 1019.0, 448.0, 4.793, 470800.0, \"<1H OCEAN\"], [-120.98, 37.68, 27.0, 4006.0, 762.0, 1806.0, 718.0, 3.1848, 112800.0, \"INLAND\"], [-120.43, 34.95, 43.0, 2020.0, 344.0, 692.0, 310.0, 3.6815, 181800.0, \"<1H OCEAN\"], [-117.92, 33.63, 24.0, 1562.0, 441.0, 696.0, 347.0, 3.5161, 236400.0, \"<1H OCEAN\"], [-121.36, 38.6, 36.0, 1275.0, 227.0, 530.0, 245.0, 3.875, 133600.0, \"INLAND\"], [-118.06, 34.03, 36.0, 21.0, 7.0, 21.0, 9.0, 2.375, 175000.0, \"<1H OCEAN\"], [-119.16, 36.31, 7.0, 2946.0, 664.0, 1608.0, 622.0, 1.6829, 80200.0, \"INLAND\"], [-121.32, 38.03, 25.0, 2474.0, 513.0, 1947.0, 524.0, 2.5742, 98400.0, \"INLAND\"], [-116.5, 33.81, 26.0, 5032.0, 1229.0, 3086.0, 1183.0, 2.5399, 94800.0, \"INLAND\"], [-118.42, 34.32, 30.0, 3027.0, 604.0, 1970.0, 590.0, 4.3409, 156000.0, \"<1H OCEAN\"], [-118.36, 34.1, 52.0, 1096.0, 247.0, 423.0, 230.0, 3.0179, 500001.0, \"<1H OCEAN\"], [-122.7, 39.0, 18.0, 793.0, 148.0, 186.0, 59.0, 2.3125, 162500.0, \"INLAND\"], [-120.04, 36.93, 11.0, 3606.0, 699.0, 2074.0, 644.0, 2.6941, 63300.0, \"INLAND\"], [-118.31, 33.88, 21.0, 1490.0, 430.0, 686.0, 400.0, 2.3812, 237500.0, \"<1H OCEAN\"], [-122.32, 38.35, 20.0, 3494.0, 549.0, 1673.0, 541.0, 5.5718, 185200.0, \"INLAND\"], [-121.52, 38.53, 31.0, 3089.0, 585.0, 1366.0, 561.0, 4.2885, 160300.0, \"INLAND\"], [-121.2, 38.67, 26.0, 1546.0, 287.0, 773.0, 299.0, 2.9803, 115400.0, \"INLAND\"], [-122.47, 37.78, 52.0, 2388.0, 507.0, 1078.0, 494.0, 3.5221, 443300.0, \"NEAR BAY\"], [-121.1, 38.33, 14.0, 1357.0, 247.0, 695.0, 224.0, 4.1974, 157800.0, \"INLAND\"], [-117.97, 34.1, 26.0, 1399.0, 277.0, 1285.0, 276.0, 4.0, 160100.0, \"INLAND\"], [-121.26, 38.27, 20.0, 1314.0, 229.0, 712.0, 219.0, 4.4125, 144600.0, \"INLAND\"], [-122.3, 41.32, 13.0, 2300.0, 513.0, 1151.0, 488.0, 2.1571, 81500.0, \"INLAND\"], [-121.95, 36.61, 31.0, 1736.0, 250.0, 497.0, 170.0, 6.3835, 407800.0, \"NEAR OCEAN\"], [-119.69, 36.81, 15.0, 2892.0, 496.0, 1634.0, 501.0, 4.4934, 88000.0, \"INLAND\"], [-118.35, 33.96, 21.0, 2714.0, 881.0, 1549.0, 853.0, 1.2094, 157500.0, \"<1H OCEAN\"], [-121.71, 36.78, 19.0, 2371.0, 324.0, 944.0, 332.0, 5.9175, 240200.0, \"<1H OCEAN\"], [-117.9, 34.13, 32.0, 1640.0, 391.0, 1312.0, 358.0, 2.6292, 136100.0, \"<1H OCEAN\"], [-122.45, 37.71, 52.0, 1658.0, 322.0, 1086.0, 326.0, 3.8583, 261600.0, \"NEAR OCEAN\"], [-118.41, 34.19, 39.0, 1169.0, 242.0, 612.0, 247.0, 4.1429, 200000.0, \"<1H OCEAN\"], [-122.07, 37.66, 28.0, 2280.0, 610.0, 1255.0, 587.0, 2.6719, 161200.0, \"NEAR BAY\"], [-121.89, 37.31, 52.0, 1994.0, 404.0, 1014.0, 389.0, 4.3882, 223600.0, \"<1H OCEAN\"], [-117.65, 34.04, 15.0, 3393.0, NaN, 2039.0, 611.0, 3.9336, 151000.0, \"INLAND\"], [-118.41, 34.17, 35.0, 2027.0, 428.0, 879.0, 402.0, 4.692, 330900.0, \"<1H OCEAN\"], [-121.24, 38.79, 15.0, 2615.0, 485.0, 1063.0, 428.0, 3.7904, 173200.0, \"INLAND\"], [-116.99, 33.75, 18.0, 9601.0, 2401.0, 4002.0, 2106.0, 1.4366, 77000.0, \"INLAND\"], [-119.73, 36.62, 35.0, 2080.0, 365.0, 1026.0, 333.0, 3.5781, 92800.0, \"INLAND\"], [-122.24, 37.76, 52.0, 2646.0, 581.0, 1128.0, 522.0, 3.0718, 266700.0, \"NEAR BAY\"], [-117.89, 33.62, 24.0, 1016.0, 238.0, 465.0, 236.0, 3.0625, 93800.0, \"<1H OCEAN\"], [-122.47, 37.76, 52.0, 2465.0, 489.0, 1170.0, 498.0, 4.0793, 306700.0, \"NEAR BAY\"], [-117.13, 32.74, 52.0, 1512.0, 321.0, 651.0, 321.0, 3.6852, 185300.0, \"NEAR OCEAN\"], [-121.91, 37.93, 13.0, 1610.0, 198.0, 703.0, 217.0, 8.7059, 329400.0, \"INLAND\"], [-117.16, 32.91, 5.0, 1619.0, 272.0, 1063.0, 296.0, 6.0891, 214600.0, \"<1H OCEAN\"], [-118.38, 34.07, 21.0, 3653.0, 956.0, 1510.0, 890.0, 3.5573, 500001.0, \"<1H OCEAN\"], [-116.86, 33.05, 17.0, 9044.0, 1689.0, 5030.0, 1596.0, 3.6348, 164500.0, \"<1H OCEAN\"], [-121.3, 38.72, 15.0, 2514.0, 482.0, 1166.0, 503.0, 2.2813, 131900.0, \"INLAND\"], [-116.94, 33.77, 14.0, 7240.0, 1410.0, 2708.0, 1240.0, 2.4145, 137600.0, \"INLAND\"], [-116.58, 32.69, 19.0, 4085.0, 876.0, 2133.0, 718.0, 2.919, 116500.0, \"INLAND\"], [-122.01, 37.56, 6.0, 3028.0, 778.0, 1531.0, 736.0, 4.4259, 158000.0, \"NEAR BAY\"], [-117.1, 32.76, 31.0, 987.0, 267.0, 619.0, 250.0, 2.9286, 151800.0, \"NEAR OCEAN\"], [-118.01, 34.1, 35.0, 2120.0, 412.0, 1375.0, 405.0, 3.4609, 166300.0, \"INLAND\"], [-117.69, 33.47, 23.0, 3499.0, 722.0, 1480.0, 634.0, 3.86, 300000.0, \"<1H OCEAN\"], [-121.42, 38.64, 44.0, 1728.0, 367.0, 1042.0, 349.0, 1.6033, 58500.0, \"INLAND\"], [-122.18, 37.74, 35.0, 504.0, 126.0, 323.0, 109.0, 1.8438, 90500.0, \"NEAR BAY\"], [-116.49, 33.8, 13.0, 8789.0, 1875.0, 1274.0, 688.0, 3.7396, 148900.0, \"INLAND\"], [-117.9, 33.72, 36.0, 443.0, 117.0, 577.0, 115.0, 3.6875, 137500.0, \"<1H OCEAN\"], [-118.11, 33.98, 36.0, 446.0, 108.0, 410.0, 117.0, 3.3942, 147200.0, \"<1H OCEAN\"], [-122.4, 37.72, 41.0, 1975.0, 440.0, 1528.0, 424.0, 3.8625, 218300.0, \"NEAR BAY\"], [-120.4, 34.86, 11.0, 1633.0, 348.0, 504.0, 327.0, 2.0508, 275000.0, \"<1H OCEAN\"], [-122.45, 37.72, 52.0, 982.0, 197.0, 653.0, 171.0, 4.2167, 231900.0, \"NEAR BAY\"], [-115.56, 32.79, 20.0, 2372.0, 835.0, 2283.0, 767.0, 1.1707, 62500.0, \"INLAND\"], [-118.16, 34.11, 48.0, 1091.0, 236.0, 632.0, 234.0, 3.7235, 263600.0, \"<1H OCEAN\"], [-116.98, 32.73, 16.0, 952.0, 143.0, 530.0, 143.0, 5.0864, 175300.0, \"<1H OCEAN\"], [-121.87, 37.42, 19.0, 12128.0, 2112.0, 6810.0, 2040.0, 6.4419, 264500.0, \"<1H OCEAN\"], [-121.24, 37.95, 36.0, 361.0, 63.0, 169.0, 62.0, 3.7734, 63800.0, \"INLAND\"], [-121.66, 39.15, 22.0, 2144.0, 376.0, 1200.0, 370.0, 3.4426, 102400.0, \"INLAND\"], [-121.41, 38.52, 25.0, 3087.0, 720.0, 2529.0, 708.0, 1.8689, 66800.0, \"INLAND\"], [-116.98, 33.26, 12.0, 5898.0, 1002.0, 3129.0, 945.0, 4.7647, 254100.0, \"<1H OCEAN\"], [-118.16, 33.85, 36.0, 2668.0, 473.0, 1315.0, 478.0, 4.0714, 215600.0, \"<1H OCEAN\"], [-117.2, 34.04, 24.0, 1587.0, 222.0, 676.0, 234.0, 6.0715, 173400.0, \"INLAND\"], [-118.03, 33.86, 19.0, 1795.0, 328.0, 1014.0, 322.0, 4.535, 289300.0, \"<1H OCEAN\"], [-122.5, 37.75, 44.0, 1819.0, NaN, 1137.0, 354.0, 3.4919, 271800.0, \"NEAR OCEAN\"], [-122.64, 38.23, 52.0, 1075.0, 249.0, 519.0, 210.0, 3.0769, 230900.0, \"<1H OCEAN\"], [-121.0, 37.25, 31.0, 1923.0, 341.0, 806.0, 349.0, 3.1738, 97600.0, \"INLAND\"], [-121.3, 39.0, 16.0, 3155.0, 541.0, 1630.0, 540.0, 4.0282, 126400.0, \"INLAND\"], [-121.29, 38.15, 23.0, 4183.0, 633.0, 1886.0, 628.0, 4.8787, 175300.0, \"INLAND\"], [-121.7, 36.48, 19.0, 2150.0, 479.0, 1052.0, 428.0, 3.5039, 288400.0, \"<1H OCEAN\"], [-120.24, 38.01, 11.0, 1214.0, 228.0, 633.0, 199.0, 3.125, 148600.0, \"INLAND\"], [-122.54, 37.98, 52.0, 1758.0, 316.0, 607.0, 264.0, 5.5083, 371900.0, \"NEAR BAY\"], [-122.48, 37.78, 44.0, 3371.0, 794.0, 1738.0, 753.0, 3.1653, 335300.0, \"NEAR BAY\"], [-117.24, 34.15, 23.0, 3847.0, 608.0, 1621.0, 630.0, 4.6111, 128400.0, \"INLAND\"], [-121.31, 38.97, 16.0, 1210.0, 228.0, 726.0, 222.0, 2.7083, 82100.0, \"INLAND\"], [-118.05, 34.11, 42.0, 3677.0, 627.0, 1779.0, 622.0, 5.1509, 426500.0, \"INLAND\"], [-118.21, 34.08, 26.0, 2574.0, 807.0, 3163.0, 802.0, 1.9495, 173200.0, \"<1H OCEAN\"], [-118.31, 33.93, 43.0, 1834.0, 292.0, 997.0, 295.0, 4.9464, 150300.0, \"<1H OCEAN\"], [-118.01, 33.96, 36.0, 1805.0, 288.0, 882.0, 308.0, 5.3054, 273500.0, \"<1H OCEAN\"], [-122.33, 37.57, 27.0, 3085.0, 876.0, 1453.0, 896.0, 3.4333, 290000.0, \"NEAR OCEAN\"], [-117.37, 33.19, 18.0, 975.0, 382.0, 650.0, 286.0, 1.9562, 192500.0, \"NEAR OCEAN\"], [-117.36, 34.0, 19.0, 4592.0, 895.0, 2769.0, 838.0, 3.3622, 105100.0, \"INLAND\"], [-118.21, 34.12, 52.0, 1590.0, 360.0, 1127.0, 321.0, 3.4625, 173900.0, \"<1H OCEAN\"], [-118.23, 33.9, 34.0, 2462.0, 553.0, 2334.0, 502.0, 1.641, 96800.0, \"<1H OCEAN\"], [-120.42, 34.87, 18.0, 2505.0, 376.0, 1162.0, 382.0, 4.8359, 195700.0, \"<1H OCEAN\"], [-120.94, 39.05, 8.0, 3758.0, 717.0, 1744.0, 661.0, 3.1972, 151500.0, \"INLAND\"], [-122.01, 37.58, 17.0, 4313.0, 717.0, 2629.0, 721.0, 5.7579, 231800.0, \"NEAR BAY\"], [-122.44, 37.73, 52.0, 2381.0, 492.0, 1485.0, 447.0, 4.3898, 270000.0, \"NEAR BAY\"], [-117.06, 32.55, 5.0, 3223.0, 940.0, 3284.0, 854.0, 1.4384, 108800.0, \"NEAR OCEAN\"], [-118.2, 33.77, 52.0, 1375.0, 457.0, 1089.0, 317.0, 2.2344, 200000.0, \"NEAR OCEAN\"], [-117.66, 34.09, 26.0, 1151.0, 200.0, 593.0, 188.0, 3.6667, 166300.0, \"INLAND\"], [-118.13, 34.02, 36.0, 984.0, 275.0, 1024.0, 284.0, 2.125, 153500.0, \"<1H OCEAN\"], [-122.69, 38.35, 16.0, 1689.0, 254.0, 921.0, 270.0, 4.4444, 191800.0, \"<1H OCEAN\"], [-121.36, 38.01, 16.0, 2178.0, 667.0, 1192.0, 579.0, 2.3339, 87100.0, \"INLAND\"], [-118.39, 33.84, 16.0, 2472.0, 572.0, 965.0, 529.0, 5.137, 348600.0, \"<1H OCEAN\"], [-117.18, 32.82, 25.0, 1756.0, 301.0, 722.0, 312.0, 4.5625, 162300.0, \"NEAR OCEAN\"], [-121.26, 37.93, 33.0, 2109.0, 531.0, 2248.0, 588.0, 1.4583, 53000.0, \"INLAND\"], [-122.05, 37.38, 24.0, 2424.0, 501.0, 1367.0, 507.0, 4.072, 364200.0, \"<1H OCEAN\"], [-117.7, 35.64, 8.0, 2683.0, 416.0, 1154.0, 399.0, 5.8625, 109400.0, \"INLAND\"], [-119.53, 34.4, 14.0, 1671.0, 383.0, 1079.0, 365.0, 3.1389, 248700.0, \"<1H OCEAN\"], [-120.5, 37.37, 18.0, 8606.0, 1678.0, 5303.0, 1644.0, 2.4012, 79700.0, \"INLAND\"], [-121.76, 37.67, 6.0, 3023.0, 518.0, 1225.0, 468.0, 6.3705, 350000.0, \"INLAND\"], [-118.37, 34.07, 52.0, 2195.0, 435.0, 884.0, 432.0, 5.24, 486400.0, \"<1H OCEAN\"], [-118.37, 34.22, 17.0, 1787.0, 463.0, 1671.0, 448.0, 3.5521, 151500.0, \"<1H OCEAN\"], [-117.23, 33.19, 22.0, 2554.0, 447.0, 1147.0, 422.0, 3.6346, 192500.0, \"<1H OCEAN\"], [-122.49, 37.76, 49.0, 1637.0, 304.0, 729.0, 281.0, 4.3281, 323100.0, \"NEAR BAY\"], [-118.36, 33.99, 35.0, 3702.0, 648.0, 1449.0, 614.0, 5.3194, 313700.0, \"<1H OCEAN\"], [-117.87, 33.64, 26.0, 3521.0, 455.0, 1336.0, 451.0, 10.2849, 500001.0, \"<1H OCEAN\"], [-119.64, 36.33, 41.0, 3095.0, 766.0, 1852.0, 721.0, 1.4524, 51700.0, \"INLAND\"], [-122.08, 40.09, 19.0, 2611.0, 503.0, 1185.0, 483.0, 2.3657, 94000.0, \"INLAND\"], [-121.51, 38.54, 34.0, 2815.0, 479.0, 1075.0, 471.0, 3.9792, 164800.0, \"INLAND\"], [-118.14, 34.04, 43.0, 1949.0, 464.0, 1216.0, 457.0, 3.3214, 209300.0, \"<1H OCEAN\"], [-122.26, 38.13, 28.0, 3072.0, 790.0, 1375.0, 705.0, 1.6368, 91200.0, \"NEAR BAY\"], [-120.9, 37.66, 19.0, 3377.0, 669.0, 2426.0, 663.0, 2.9783, 82500.0, \"INLAND\"], [-117.8, 33.74, 30.0, 3569.0, 551.0, 1540.0, 537.0, 5.2998, 247200.0, \"<1H OCEAN\"], [-118.31, 34.06, 34.0, 2470.0, 1197.0, 2326.0, 1055.0, 1.9038, 325000.0, \"<1H OCEAN\"], [-118.24, 33.96, 37.0, 1602.0, 388.0, 1553.0, 342.0, 2.0655, 93400.0, \"<1H OCEAN\"], [-123.32, 40.43, 15.0, 661.0, 146.0, 131.0, 57.0, 0.4999, 56700.0, \"INLAND\"], [-118.13, 33.91, 36.0, 1967.0, 316.0, 910.0, 306.0, 4.4948, 190600.0, \"<1H OCEAN\"], [-121.96, 37.27, 22.0, 6114.0, 1211.0, 2983.0, 1163.0, 5.2533, 269100.0, \"<1H OCEAN\"], [-121.3, 38.75, 36.0, 3903.0, 885.0, 2313.0, 804.0, 2.655, 86300.0, \"INLAND\"], [-122.41, 37.72, 32.0, 1650.0, 316.0, 904.0, 295.0, 4.0583, 236200.0, \"NEAR BAY\"], [-118.33, 34.19, 45.0, 1505.0, 347.0, 799.0, 319.0, 3.138, 217000.0, \"<1H OCEAN\"], [-122.01, 37.18, 37.0, 3852.0, 652.0, 1534.0, 567.0, 5.8596, 318700.0, \"<1H OCEAN\"], [-122.44, 37.76, 52.0, 1968.0, 472.0, 784.0, 430.0, 3.3702, 370000.0, \"NEAR BAY\"], [-118.37, 33.92, 40.0, 928.0, 187.0, 521.0, 185.0, 5.5255, 242700.0, \"<1H OCEAN\"], [-117.12, 32.76, 28.0, 1605.0, 501.0, 936.0, 460.0, 2.5991, 147500.0, \"NEAR OCEAN\"], [-117.74, 34.08, 35.0, 1613.0, 298.0, 911.0, 293.0, 3.4398, 134300.0, \"INLAND\"], [-118.98, 37.64, 17.0, 3769.0, 908.0, 1160.0, 453.0, 3.05, 188900.0, \"INLAND\"], [-119.65, 37.09, 17.0, 1280.0, 254.0, 707.0, 267.0, 3.55, 106300.0, \"INLAND\"], [-118.19, 34.08, 38.0, 1241.0, 298.0, 1055.0, 263.0, 2.3409, 115500.0, \"<1H OCEAN\"], [-117.18, 33.16, 15.0, 5923.0, 1206.0, 3943.0, 1006.0, 3.1793, 159900.0, \"<1H OCEAN\"], [-118.11, 33.88, 19.0, 3203.0, 708.0, 1761.0, 667.0, 4.0911, 239700.0, \"<1H OCEAN\"], [-118.32, 34.09, 32.0, 563.0, 191.0, 626.0, 185.0, 2.0341, 250000.0, \"<1H OCEAN\"], [-117.98, 34.53, 13.0, 2815.0, 535.0, 1492.0, 491.0, 4.0945, 135700.0, \"INLAND\"], [-120.48, 37.34, 8.0, 6146.0, 1017.0, 2821.0, 987.0, 4.67, 127600.0, \"INLAND\"], [-117.62, 34.09, 26.0, 3271.0, 595.0, 2259.0, 566.0, 4.0139, 132000.0, \"INLAND\"], [-118.12, 33.97, 35.0, 708.0, 145.0, 471.0, 153.0, 3.2, 197400.0, \"<1H OCEAN\"], [-117.25, 33.21, 13.0, 1203.0, 292.0, 1035.0, 293.0, 2.6339, 117000.0, \"<1H OCEAN\"], [-121.62, 39.15, 23.0, 1984.0, 528.0, 1043.0, 452.0, 1.9375, 65300.0, \"INLAND\"], [-122.25, 37.81, 52.0, 1758.0, 460.0, 686.0, 422.0, 3.1691, 259400.0, \"NEAR BAY\"], [-122.42, 37.8, 52.0, 2657.0, 772.0, 1014.0, 685.0, 4.038, 500001.0, \"NEAR BAY\"], [-118.48, 34.47, 36.0, 84.0, 12.0, 29.0, 17.0, 3.375, 187500.0, \"<1H OCEAN\"], [-120.35, 37.86, 25.0, 287.0, 57.0, 118.0, 50.0, 2.3056, 162500.0, \"INLAND\"], [-121.91, 37.28, 29.0, 5650.0, 817.0, 2098.0, 813.0, 6.4285, 337300.0, \"<1H OCEAN\"], [-122.23, 37.82, 52.0, 1611.0, 203.0, 556.0, 179.0, 8.7477, 500001.0, \"NEAR BAY\"], [-122.41, 37.66, 37.0, 694.0, 188.0, 658.0, 225.0, 4.6103, 237500.0, \"NEAR OCEAN\"], [-118.43, 34.18, 31.0, 2417.0, 510.0, 1102.0, 507.0, 3.8906, 282200.0, \"<1H OCEAN\"], [-118.19, 33.78, 31.0, 1648.0, 484.0, 898.0, 457.0, 1.5844, 162500.0, \"NEAR OCEAN\"], [-119.64, 37.31, 15.0, 2654.0, 530.0, 1267.0, 489.0, 2.8393, 104400.0, \"INLAND\"], [-117.32, 33.15, 15.0, 13245.0, 2212.0, 5495.0, 2060.0, 5.4904, 262100.0, \"NEAR OCEAN\"], [-122.33, 37.39, 52.0, 573.0, 102.0, 232.0, 92.0, 6.2263, 500001.0, \"NEAR OCEAN\"], [-117.93, 33.62, 37.0, 2204.0, 428.0, 807.0, 410.0, 7.0516, 500001.0, \"<1H OCEAN\"], [-121.92, 37.3, 35.0, 1335.0, 296.0, 635.0, 296.0, 3.6053, 345800.0, \"<1H OCEAN\"], [-116.75, 32.85, 17.0, 4863.0, 845.0, 2266.0, 769.0, 4.2321, 217400.0, \"<1H OCEAN\"], [-121.2, 37.97, 39.0, 440.0, 83.0, 270.0, 97.0, 6.0582, 157700.0, \"INLAND\"], [-122.01, 36.91, 19.0, 691.0, 191.0, 324.0, 167.0, 3.1312, 388500.0, \"NEAR OCEAN\"], [-118.13, 33.79, 29.0, 2937.0, 524.0, 1132.0, 528.0, 4.6133, 500001.0, \"NEAR OCEAN\"], [-121.54, 39.5, 38.0, 1438.0, 310.0, 779.0, 275.0, 1.3289, 39400.0, \"INLAND\"], [-117.21, 34.14, 16.0, 1613.0, 245.0, 811.0, 267.0, 5.2591, 140700.0, \"INLAND\"], [-117.15, 34.06, 25.0, 3670.0, 644.0, 1815.0, 634.0, 4.0658, 127400.0, \"INLAND\"], [-117.29, 33.2, 16.0, 2150.0, 461.0, 1428.0, 407.0, 2.4754, 157300.0, \"NEAR OCEAN\"], [-121.98, 38.34, 18.0, 3876.0, 916.0, 2386.0, 867.0, 2.5938, 129500.0, \"INLAND\"], [-118.39, 34.08, 52.0, 1244.0, 304.0, 444.0, 282.0, 3.5114, 430800.0, \"<1H OCEAN\"], [-120.67, 35.29, 44.0, 2236.0, 411.0, 1036.0, 437.0, 3.0833, 219300.0, \"NEAR OCEAN\"], [-118.09, 33.92, 33.0, 879.0, 181.0, 547.0, 169.0, 5.3146, 168600.0, \"<1H OCEAN\"], [-117.88, 33.83, 22.0, 3522.0, 543.0, 1706.0, 524.0, 6.4685, 241200.0, \"<1H OCEAN\"], [-117.98, 34.05, 35.0, 2342.0, 426.0, 2176.0, 416.0, 3.7454, 156900.0, \"<1H OCEAN\"], [-121.49, 38.5, 30.0, 1715.0, 271.0, 842.0, 263.0, 3.0313, 87900.0, \"INLAND\"], [-121.85, 36.59, 42.0, 891.0, 203.0, 525.0, 212.0, 3.3156, 186300.0, \"<1H OCEAN\"], [-118.2, 33.81, 46.0, 1388.0, 254.0, 742.0, 241.0, 4.6458, 212100.0, \"NEAR OCEAN\"], [-117.88, 34.14, 32.0, 1764.0, 365.0, 924.0, 329.0, 3.875, 186700.0, \"INLAND\"], [-118.38, 34.21, 42.0, 715.0, 145.0, 730.0, 158.0, 3.8, 169500.0, \"<1H OCEAN\"], [-117.8, 34.1, 17.0, 5153.0, 1164.0, 2949.0, 1083.0, 3.5603, 174600.0, \"INLAND\"], [-122.06, 37.88, 34.0, 4781.0, 703.0, 1879.0, 714.0, 6.5378, 340900.0, \"NEAR BAY\"], [-117.99, 34.14, 30.0, 2346.0, NaN, 1988.0, 474.0, 2.5625, 153000.0, \"INLAND\"], [-117.58, 33.6, 5.0, 5348.0, 659.0, 1862.0, 555.0, 11.0567, 495400.0, \"<1H OCEAN\"], [-118.3, 34.05, 46.0, 1386.0, 457.0, 1845.0, 485.0, 2.1414, 157700.0, \"<1H OCEAN\"], [-118.32, 34.07, 52.0, 2980.0, 366.0, 967.0, 359.0, 11.2185, 500001.0, \"<1H OCEAN\"], [-118.13, 33.94, 34.0, 522.0, 138.0, 373.0, 139.0, 3.5481, 265000.0, \"<1H OCEAN\"], [-121.2, 37.6, 30.0, 2110.0, 406.0, 1301.0, 345.0, 2.3173, 86500.0, \"INLAND\"], [-122.09, 37.39, 30.0, 1722.0, 490.0, 1057.0, 517.0, 3.725, 261300.0, \"NEAR BAY\"], [-122.2, 37.47, 37.0, 1053.0, 266.0, 939.0, 267.0, 3.1989, 320800.0, \"NEAR BAY\"], [-122.14, 37.88, 34.0, 6986.0, 1096.0, 2865.0, 1124.0, 6.2275, 394400.0, \"NEAR BAY\"], [-118.3, 34.19, 52.0, 1704.0, 277.0, 746.0, 262.0, 4.7986, 326100.0, \"<1H OCEAN\"], [-118.2, 34.13, 50.0, 2929.0, 588.0, 1931.0, 574.0, 3.3438, 173600.0, \"<1H OCEAN\"], [-121.04, 37.68, 28.0, 1909.0, 398.0, 1140.0, 380.0, 2.3783, 81400.0, \"INLAND\"], [-122.79, 38.5, 18.0, 4839.0, 918.0, 2755.0, 841.0, 3.75, 248300.0, \"<1H OCEAN\"], [-117.97, 34.07, 22.0, 1438.0, 364.0, 1325.0, 335.0, 2.7802, 162500.0, \"<1H OCEAN\"], [-122.41, 37.8, 52.0, 1394.0, 395.0, 1700.0, 400.0, 2.75, 168800.0, \"NEAR BAY\"], [-121.44, 38.61, 41.0, 1404.0, 313.0, 765.0, 330.0, 1.8792, 63300.0, \"INLAND\"], [-122.37, 37.95, 32.0, 1298.0, 363.0, 716.0, 268.0, 0.9797, 76400.0, \"NEAR BAY\"], [-120.86, 37.69, 5.0, 6660.0, 1217.0, 3012.0, 1087.0, 3.0809, 143600.0, \"INLAND\"], [-114.59, 34.83, 41.0, 812.0, NaN, 375.0, 158.0, 1.7083, 48500.0, \"INLAND\"], [-118.5, 34.03, 32.0, 6365.0, 1784.0, 2767.0, 1698.0, 3.6451, 383300.0, \"<1H OCEAN\"], [-117.93, 34.03, 35.0, 2160.0, 399.0, 1694.0, 403.0, 3.8581, 163100.0, \"<1H OCEAN\"], [-117.98, 33.75, 37.0, 1264.0, 274.0, 783.0, 273.0, 3.3438, 199600.0, \"<1H OCEAN\"], [-122.31, 37.56, 40.0, 1351.0, 330.0, 701.0, 297.0, 3.32, 292900.0, \"NEAR OCEAN\"]];\n\n        // Define the dt_args\n        let dt_args = {\"layout\": {\"topStart\": \"pageLength\", \"topEnd\": \"search\", \"bottomStart\": \"info\", \"bottomEnd\": \"paging\"}, \"order\": [], \"show_info\": false};\n        dt_args[\"data\"] = data;\n\n        \n        new DataTable(table, dt_args);\n    });\n</script>\n```\n:::\n:::\n\n\n## Chapter Summary\n\n\n\nAfter putting together a preprocessing pipeline that's summarized in the model graph below, we can start with the simplest possible model, a linear regression.\n\n::: {#6f1292cd .cell execution_count=3}\n``` {.python .cell-code}\nfrom sklearn.linear_model import LinearRegression\n\npreprocessing = ColumnTransformer([\n    (\"bedrooms\", ratio_pipeline(), [\"total_bedrooms\", \"total_rooms\"]),\n    (\"rooms_per_house\", ratio_pipeline(), [\"total_rooms\", \"households\"]),\n    (\"people_per_house\", ratio_pipeline(), [\"population\", \"households\"]),\n    (\"log\", log_pipeline, [\"total_bedrooms\", \"total_rooms\", \"population\", \"households\", \"median_income\"]),\n    (\"geo\", cluster_simil, [\"latitude\", \"longitude\"]),\n    (\"cat\", cat_pipeline, make_column_selector(dtype_include=object))],\n    remainder=default_num_pipeline)\n\nhousing_prepared = preprocessing.fit_transform(housing)\n\nlin_reg = make_pipeline(preprocessing, LinearRegression())\nlin_reg.fit(housing, housing_labels)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<style>#sk-container-id-1 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-1 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-1 pre {\n  padding: 0;\n}\n\n#sk-container-id-1 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-1 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-1 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-1 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-1 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-1 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-1 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-1 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-1 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-1 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n#sk-container-id-1 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-1 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-1 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-1 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-1 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-1 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-1 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,\n                 ColumnTransformer(remainder=Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                                              SimpleImputer(strategy=&#x27;median&#x27;)),\n                                                             (&#x27;standardscaler&#x27;,\n                                                              StandardScaler())]),\n                                   transformers=[(&#x27;bedrooms&#x27;,\n                                                  Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                                                   SimpleImputer(strategy=&#x27;median&#x27;)),\n                                                                  (&#x27;functiontransformer&#x27;,\n                                                                   FunctionTransformer(feature_names_out=&lt;function ratio_name at 0x30a...\n                                                   &#x27;median_income&#x27;]),\n                                                 (&#x27;geo&#x27;,\n                                                  ClusterSimilarity(gamma=0.1,\n                                                                    random_state=42),\n                                                  [&#x27;latitude&#x27;, &#x27;longitude&#x27;]),\n                                                 (&#x27;cat&#x27;,\n                                                  Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                                                   SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                                  (&#x27;onehotencoder&#x27;,\n                                                                   OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),\n                                                  &lt;sklearn.compose._column_transformer.make_column_selector object at 0x107ee2a80&gt;)])),\n                (&#x27;linearregression&#x27;, LinearRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;Pipeline<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.pipeline.Pipeline.html\">?<span>Documentation for Pipeline</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,\n                 ColumnTransformer(remainder=Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                                              SimpleImputer(strategy=&#x27;median&#x27;)),\n                                                             (&#x27;standardscaler&#x27;,\n                                                              StandardScaler())]),\n                                   transformers=[(&#x27;bedrooms&#x27;,\n                                                  Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                                                   SimpleImputer(strategy=&#x27;median&#x27;)),\n                                                                  (&#x27;functiontransformer&#x27;,\n                                                                   FunctionTransformer(feature_names_out=&lt;function ratio_name at 0x30a...\n                                                   &#x27;median_income&#x27;]),\n                                                 (&#x27;geo&#x27;,\n                                                  ClusterSimilarity(gamma=0.1,\n                                                                    random_state=42),\n                                                  [&#x27;latitude&#x27;, &#x27;longitude&#x27;]),\n                                                 (&#x27;cat&#x27;,\n                                                  Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                                                   SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                                  (&#x27;onehotencoder&#x27;,\n                                                                   OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),\n                                                  &lt;sklearn.compose._column_transformer.make_column_selector object at 0x107ee2a80&gt;)])),\n                (&#x27;linearregression&#x27;, LinearRegression())])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;columntransformer: ColumnTransformer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.compose.ColumnTransformer.html\">?<span>Documentation for columntransformer: ColumnTransformer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>ColumnTransformer(remainder=Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                             SimpleImputer(strategy=&#x27;median&#x27;)),\n                                            (&#x27;standardscaler&#x27;,\n                                             StandardScaler())]),\n                  transformers=[(&#x27;bedrooms&#x27;,\n                                 Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                                  SimpleImputer(strategy=&#x27;median&#x27;)),\n                                                 (&#x27;functiontransformer&#x27;,\n                                                  FunctionTransformer(feature_names_out=&lt;function ratio_name at 0x30ae6df80&gt;,\n                                                                      func=&lt;function column_ratio at 0...\n                                 [&#x27;total_bedrooms&#x27;, &#x27;total_rooms&#x27;, &#x27;population&#x27;,\n                                  &#x27;households&#x27;, &#x27;median_income&#x27;]),\n                                (&#x27;geo&#x27;,\n                                 ClusterSimilarity(gamma=0.1, random_state=42),\n                                 [&#x27;latitude&#x27;, &#x27;longitude&#x27;]),\n                                (&#x27;cat&#x27;,\n                                 Pipeline(steps=[(&#x27;simpleimputer&#x27;,\n                                                  SimpleImputer(strategy=&#x27;most_frequent&#x27;)),\n                                                 (&#x27;onehotencoder&#x27;,\n                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),\n                                 &lt;sklearn.compose._column_transformer.make_column_selector object at 0x107ee2a80&gt;)])</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">bedrooms</label><div class=\"sk-toggleable__content fitted\"><pre>[&#x27;total_bedrooms&#x27;, &#x27;total_rooms&#x27;]</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SimpleImputer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.impute.SimpleImputer.html\">?<span>Documentation for SimpleImputer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SimpleImputer(strategy=&#x27;median&#x27;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;FunctionTransformer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.FunctionTransformer.html\">?<span>Documentation for FunctionTransformer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>FunctionTransformer(feature_names_out=&lt;function ratio_name at 0x30ae6df80&gt;,\n                    func=&lt;function column_ratio at 0x309f185e0&gt;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">rooms_per_house</label><div class=\"sk-toggleable__content fitted\"><pre>[&#x27;total_rooms&#x27;, &#x27;households&#x27;]</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SimpleImputer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.impute.SimpleImputer.html\">?<span>Documentation for SimpleImputer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SimpleImputer(strategy=&#x27;median&#x27;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;FunctionTransformer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.FunctionTransformer.html\">?<span>Documentation for FunctionTransformer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>FunctionTransformer(feature_names_out=&lt;function ratio_name at 0x30ae6df80&gt;,\n                    func=&lt;function column_ratio at 0x309f185e0&gt;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">people_per_house</label><div class=\"sk-toggleable__content fitted\"><pre>[&#x27;population&#x27;, &#x27;households&#x27;]</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SimpleImputer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.impute.SimpleImputer.html\">?<span>Documentation for SimpleImputer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SimpleImputer(strategy=&#x27;median&#x27;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;FunctionTransformer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.FunctionTransformer.html\">?<span>Documentation for FunctionTransformer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>FunctionTransformer(feature_names_out=&lt;function ratio_name at 0x30ae6df80&gt;,\n                    func=&lt;function column_ratio at 0x309f185e0&gt;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">log</label><div class=\"sk-toggleable__content fitted\"><pre>[&#x27;total_bedrooms&#x27;, &#x27;total_rooms&#x27;, &#x27;population&#x27;, &#x27;households&#x27;, &#x27;median_income&#x27;]</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" ><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SimpleImputer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.impute.SimpleImputer.html\">?<span>Documentation for SimpleImputer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SimpleImputer(strategy=&#x27;median&#x27;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" ><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;FunctionTransformer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.FunctionTransformer.html\">?<span>Documentation for FunctionTransformer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>FunctionTransformer(feature_names_out=&#x27;one-to-one&#x27;, func=&lt;ufunc &#x27;log&#x27;&gt;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" ><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" ><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">geo</label><div class=\"sk-toggleable__content fitted\"><pre>[&#x27;latitude&#x27;, &#x27;longitude&#x27;]</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" ><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">ClusterSimilarity</label><div class=\"sk-toggleable__content fitted\"><pre>ClusterSimilarity(gamma=0.1, random_state=42)</pre></div> </div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" ><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">cat</label><div class=\"sk-toggleable__content fitted\"><pre>&lt;sklearn.compose._column_transformer.make_column_selector object at 0x107ee2a80&gt;</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" ><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SimpleImputer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.impute.SimpleImputer.html\">?<span>Documentation for SimpleImputer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SimpleImputer(strategy=&#x27;most_frequent&#x27;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-23\" type=\"checkbox\" ><label for=\"sk-estimator-id-23\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;OneHotEncoder<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.OneHotEncoder.html\">?<span>Documentation for OneHotEncoder</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div> </div></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-24\" type=\"checkbox\" ><label for=\"sk-estimator-id-24\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">remainder</label><div class=\"sk-toggleable__content fitted\"><pre>[&#x27;housing_median_age&#x27;]</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-25\" type=\"checkbox\" ><label for=\"sk-estimator-id-25\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SimpleImputer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.impute.SimpleImputer.html\">?<span>Documentation for SimpleImputer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SimpleImputer(strategy=&#x27;median&#x27;)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-26\" type=\"checkbox\" ><label for=\"sk-estimator-id-26\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-27\" type=\"checkbox\" ><label for=\"sk-estimator-id-27\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div></div></div>\n```\n:::\n:::\n\n\nNow how does this simple model perform?\n\n::: {#7e518f01 .cell execution_count=4}\n``` {.python .cell-code}\nfrom sklearn.metrics import root_mean_squared_error\n\nhousing_predictions = lin_reg.predict(housing)\nlin_rmse = root_mean_squared_error(housing_labels, housing_predictions)\n\nprint(f\"The average prediction error for the linear regression model\\nas measured by the root mean squared error is ${lin_rmse:,.2f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe average prediction error for the linear regression model\nas measured by the root mean squared error is $67,825.01\n```\n:::\n:::\n\n\nSo clearly this model does not have particularly strong results. Next we can try a decision tree model.\n\n::: {#2b4a6793 .cell execution_count=5}\n``` {.python .cell-code}\nfrom sklearn.tree import DecisionTreeRegressor\n\ntree_reg = make_pipeline(preprocessing, DecisionTreeRegressor(random_state=42))\ntree_reg.fit(housing, housing_labels)\nhousing_predictions = tree_reg.predict(housing)\ntree_rmse = root_mean_squared_error(housing_labels, housing_predictions)\nprint(f\"The average prediction error for the decision tree model\\nas measured by the root mean squared error is ${tree_rmse:,.2f}\")\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe average prediction error for the decision tree model\nas measured by the root mean squared error is $0.00\n```\n:::\n:::\n\n\nWow! A perfect model, that's great! Not so fast, the first rule of machine learning is to always treat results that seem to good to be true. While our previous model was underfitting the data, not providing enough insight to offer good predictions. This model is overfitting, learning the training data too well. While it can perfectly predict a value when we give it results it has already seen (which is what we are doing here), it will generalize very poorly to new data.\n\nLet's try using scikit-learn's k fold cross validation function. Here, we split the data in to k non-overlapping subsets (folds) and train the decision tree model k times, each time holding out a different fold for model evaluation and using the other k-1 to train the model. In the end you end up with an array with ten evaluation scores.\n\n::: {#83e83219 .cell execution_count=6}\n``` {.python .cell-code}\nfrom sklearn.model_selection import cross_val_score\n\ntree_rmses = -cross_val_score(tree_reg, housing, housing_labels, \n                                scoring=\"neg_root_mean_squared_error\", cv=10)\npd.Series(tree_rmses).describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\ncount       10.000000\nmean     66719.534520\nstd       1108.501177\nmin      64929.167182\n25%      66206.831015\n50%      66524.005161\n75%      67021.373805\nmax      68566.339092\ndtype: float64\n```\n:::\n:::\n\n\nNow the model looks less than perfect. In fact, the average root mean squared error of $66,719.53 is almost as bad as the linear regression model. So clearly we need to look further. A good place to look next is a Random Forest model. Random Forest is an extension of Decision Trees where we train many different decision trees on subsets of the training data and average out their results. They are very simply to train in scikit-learn.\n\n::: {#63825c29 .cell execution_count=7}\n``` {.python .cell-code}\nfrom sklearn.ensemble import RandomForestRegressor\n\nforest_reg = make_pipeline(preprocessing,\n                           RandomForestRegressor(random_state=42))\n\nforest_rmses = -cross_val_score(forest_reg, housing, housing_labels, \n                                scoring=\"neg_root_mean_squared_error\", cv=10)\npd.Series(forest_rmses).describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\ncount       10.000000\nmean     47018.993979\nstd       1042.481972\nmin      45707.317044\n25%      46514.403841\n50%      47017.225303\n75%      47243.182273\nmax      49343.424080\ndtype: float64\n```\n:::\n:::\n\n\nThat's already an improvement of at almost $20,000! But can we do better?\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}